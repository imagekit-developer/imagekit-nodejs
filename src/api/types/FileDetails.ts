/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * Object containing details of a file or file version.
 */
export interface FileDetails {
    /** Unique identifier of the asset. */
    fileId?: string;
    /** Type of the asset. */
    type?: string;
    /** Name of the asset. */
    name?: string;
    /** Path of the file. This is the path you would use in the URL to access the file. For example, if the file is at the root of the media library, the path will be `/file.jpg`. If the file is inside a folder named `images`, the path will be `/images/file.jpg`. */
    filePath?: string;
    /** An array of tags assigned to the file. Tags are used to search files in the media library. */
    tags?: string[];
    /** An array of tags assigned to the file by auto tagging. */
    AITags?: FileDetails.AiTags.Item[];
    /** An object with details of the file version. */
    versionInfo?: FileDetails.VersionInfo;
    /** Specifies if the file is private or not. */
    isPrivateFile?: boolean;
    /** Specifies if the file is published or not. */
    isPublished?: boolean;
    /** An string with custom coordinates of the file. */
    customCoordinates?: string;
    /** URL of the file. */
    url?: string;
    /** URL of the thumbnail image. This URL is used to access the thumbnail image of the file in the media library. */
    thumbnail?: string;
    /** Type of the file. Possible values are `image`, `non-image`. */
    fileType?: string;
    /** MIME type of the file. */
    mime?: string;
    /** Width of the file. */
    width?: number;
    /** Height of the file. */
    height?: number;
    /** Size of the file in bytes. */
    size?: number;
    /** Specifies if the image has an alpha channel. */
    hasAlpha?: boolean;
    /** An object with custom metadata for the file. */
    customMetadata?: Record<string, unknown>;
    /** Date and time when the file was uploaded. The date and time is in ISO8601 format. */
    createdAt?: string;
    /** Date and time when the file was last updated. The date and time is in ISO8601 format. */
    updatedAt?: string;
}

export namespace FileDetails {
    export type AiTags = AiTags.Item[];

    export namespace AiTags {
        export interface Item {
            /** Name of the tag. */
            name?: string;
            /** Confidence score of the tag. */
            confidence?: number;
            /** Source of the tag. Possible values are `google-auto-tagging` and `aws-auto-tagging`. */
            source?: string;
        }
    }

    /**
     * An object with details of the file version.
     */
    export interface VersionInfo {
        /** Unique identifier of the file version. */
        id?: string;
        /** Name of the file version. */
        name?: string;
    }
}
