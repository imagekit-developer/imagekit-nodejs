/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../environments.js";
import * as core from "../../../../core/index.js";
import { Usage } from "../resources/usage/client/Client.js";
import { Origins } from "../resources/origins/client/Client.js";
import { UrlEndpoints } from "../resources/urlEndpoints/client/Client.js";

export declare namespace Accounts {
    export interface Options {
        environment?: core.Supplier<environments.ImageKitEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        username: core.Supplier<string>;
        password: core.Supplier<string>;
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
}

export class Accounts {
    protected readonly _options: Accounts.Options;
    protected _usage: Usage | undefined;
    protected _origins: Origins | undefined;
    protected _urlEndpoints: UrlEndpoints | undefined;

    constructor(_options: Accounts.Options) {
        this._options = _options;
    }

    public get usage(): Usage {
        return (this._usage ??= new Usage(this._options));
    }

    public get origins(): Origins {
        return (this._origins ??= new Origins(this._options));
    }

    public get urlEndpoints(): UrlEndpoints {
        return (this._urlEndpoints ??= new UrlEndpoints(this._options));
    }
}
