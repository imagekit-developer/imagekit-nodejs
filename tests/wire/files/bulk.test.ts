/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { ImageKitClient } from "../../../src/Client";

describe("Bulk", () => {
    test("delete", async () => {
        const server = mockServerPool.createServer();
        const client = new ImageKitClient({ username: "test", password: "test", environment: server.baseUrl });
        const rawRequestBody = { fileIds: ["598821f949c0a938d57563bd", "598821f949c0a938d57563be"] };
        const rawResponseBody = { successfullyDeletedFileIds: ["successfullyDeletedFileIds"] };
        server
            .mockEndpoint()
            .post("/v1/files/batch/deleteByFileIds")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.files.bulk.delete({
            fileIds: ["598821f949c0a938d57563bd", "598821f949c0a938d57563be"],
        });
        expect(response).toEqual({
            successfullyDeletedFileIds: ["successfullyDeletedFileIds"],
        });
    });

    test("addTags", async () => {
        const server = mockServerPool.createServer();
        const client = new ImageKitClient({ username: "test", password: "test", environment: server.baseUrl });
        const rawRequestBody = {
            fileIds: ["598821f949c0a938d57563bd", "598821f949c0a938d57563be"],
            tags: ["t-shirt", "round-neck", "sale2019"],
        };
        const rawResponseBody = { successfullyUpdatedFileIds: ["successfullyUpdatedFileIds"] };
        server
            .mockEndpoint()
            .post("/v1/files/addTags")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.files.bulk.addTags({
            fileIds: ["598821f949c0a938d57563bd", "598821f949c0a938d57563be"],
            tags: ["t-shirt", "round-neck", "sale2019"],
        });
        expect(response).toEqual({
            successfullyUpdatedFileIds: ["successfullyUpdatedFileIds"],
        });
    });

    test("removeTags", async () => {
        const server = mockServerPool.createServer();
        const client = new ImageKitClient({ username: "test", password: "test", environment: server.baseUrl });
        const rawRequestBody = {
            fileIds: ["598821f949c0a938d57563bd", "598821f949c0a938d57563be"],
            tags: ["t-shirt", "round-neck", "sale2019"],
        };
        const rawResponseBody = { successfullyUpdatedFileIds: ["successfullyUpdatedFileIds"] };
        server
            .mockEndpoint()
            .post("/v1/files/removeTags")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.files.bulk.removeTags({
            fileIds: ["598821f949c0a938d57563bd", "598821f949c0a938d57563be"],
            tags: ["t-shirt", "round-neck", "sale2019"],
        });
        expect(response).toEqual({
            successfullyUpdatedFileIds: ["successfullyUpdatedFileIds"],
        });
    });

    test("removeAITags", async () => {
        const server = mockServerPool.createServer();
        const client = new ImageKitClient({ username: "test", password: "test", environment: server.baseUrl });
        const rawRequestBody = {
            fileIds: ["598821f949c0a938d57563bd", "598821f949c0a938d57563be"],
            AITags: ["t-shirt", "round-neck", "sale2019"],
        };
        const rawResponseBody = { successfullyUpdatedFileIds: ["successfullyUpdatedFileIds"] };
        server
            .mockEndpoint()
            .post("/v1/files/removeAITags")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.files.bulk.removeAiTags({
            fileIds: ["598821f949c0a938d57563bd", "598821f949c0a938d57563be"],
            AITags: ["t-shirt", "round-neck", "sale2019"],
        });
        expect(response).toEqual({
            successfullyUpdatedFileIds: ["successfullyUpdatedFileIds"],
        });
    });
});
